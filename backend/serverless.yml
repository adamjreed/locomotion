service: locomotion
app: locomotion
org: adamjreed
plugins:
  - serverless-python-requirements
custom:
  stage: ${opt:stage,'dev'}
  pythonRequirements:
    dockerizePip: non-linux
  config: ${file(./config/${self:provider.stage}.json)}
  secrets: ${ssm:/aws/reference/secretsmanager/${self:custom.config.secretsKey}~true}
provider:
  name: aws
  runtime: python3.8
  stage: ${self:custom.stage}
  vpc:
    securityGroupIds:
      - ${self:custom.config.vpc.security_group}
    subnetIds:
      - ${self:custom.config.vpc.subnet1}
      - ${self:custom.config.vpc.subnet2}
      - ${self:custom.config.vpc.subnet3}
  iamRoleStatements:
    - Effect: Allow
      Action: s3:*
      Resource: arn:aws:s3:::${self:custom.config.bucket_name}*
    - Effect: Allow
      Action:
        - glue:*
        - athena:*
      Resource: "*"
functions:
  fetchGTFS:
    handler: src/etl/fetch_gtfs.handler
    timeout: 900
    environment: 
      BUCKET_NAME: ${self:custom.config.bucket_name}
    events:
      - schedule:
          rate: cron(0 4 * * ? *)
          enabled: false
          input:
            city: chicago
            feed_url: https://www.transitchicago.com/downloads/sch_data/google_transit.zip
  loadCities:
    handler: src/etl/load_redis.cities
    timeout: 900
    environment:
      REDIS_HOST: ${self:custom.config.redis.host}
      REDIS_PORT: ${self:custom.config.redis.port}
  loadStations:
    handler: src/etl/load_redis.stations
    timeout: 900
    environment:
      BUCKET_NAME: ${self:custom.config.bucket_name}
      REDIS_HOST: ${self:custom.config.redis.host}
      REDIS_PORT: ${self:custom.config.redis.port}
    events:
      - schedule:
          rate: cron(0 6 * * ? *)
          enabled: false
          input:
            city: chicago
  cities:
    handler: src/api/cities.get
    timeout: 30
    environment:
      REDIS_HOST: ${self:custom.config.redis.host}
      REDIS_PORT: ${self:custom.config.redis.port}
    events:
      - http:
          path: cities
          method: get
  stations:
    handler: src/api/stations.get
    timeout: 30
    environment:
      REDIS_HOST: ${self:custom.config.redis.host}
      REDIS_PORT: ${self:custom.config.redis.port}
    events:
      - http:
          path: stations/{city_id}
          method: get